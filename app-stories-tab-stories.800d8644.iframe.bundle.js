"use strict";(self.webpackChunkteenageinterface=self.webpackChunkteenageinterface||[]).push([[702],{"./libs/tabs/src/lib/tab.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{j:()=>TabComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs");var common=__webpack_require__("./node_modules/@angular/common/fesm2022/common.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs");let TabComponent=class TabComponent{tabTitle="";active=!1;static propDecorators={tabTitle:[{type:core.Input}],active:[{type:core.Input}]}};TabComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"tiTab",imports:[common.CommonModule],template:'<div *ngIf="active">\r\n  <ng-content></ng-content>\r\n</div>\r\n'})],TabComponent)},"./src/app/stories/tab.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Active:()=>Active,Unactive:()=>Unactive,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _libs_tabs_src_lib_tab_component__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./libs/tabs/src/lib/tab.component.ts");const updatedReadme=function removeFirstTitle(content){return content?content.replace(/^(.*)$/m,""):""}(__webpack_require__("./libs/tabs/README.md")),__WEBPACK_DEFAULT_EXPORT__={title:"Components/Tabs/Tab",component:_libs_tabs_src_lib_tab_component__WEBPACK_IMPORTED_MODULE_1__.j,tags:["autodocs"],parameters:{docs:{description:{component:updatedReadme}}},argTypes:{tabTitle:{description:"Title displayed on the tab header."},active:{description:"Indicates whether the tab is active.",control:{type:"boolean"},table:{defaultValue:{summary:"false"},type:{summary:"boolean"}}}}},Active={args:{tabTitle:"Tab 1",active:!0},render:args=>({component:_libs_tabs_src_lib_tab_component__WEBPACK_IMPORTED_MODULE_1__.j,props:args,template:'<tiTab [tabTitle]="tabTitle" [active]="active">Content 1</tiTab>'})},Unactive={args:{tabTitle:"Tab 1",active:!1},render:args=>({component:_libs_tabs_src_lib_tab_component__WEBPACK_IMPORTED_MODULE_1__.j,props:args,template:'<tiTab [tabTitle]="tabTitle" [active]="active">Content 1</tiTab>'})},__namedExportsOrder=["Active","Unactive"];Active.parameters={...Active.parameters,docs:{...Active.parameters?.docs,source:{originalSource:'{\n  args: {\n    tabTitle: "Tab 1",\n    active: true\n  },\n  render: (args: any) => ({\n    component: TabComponent,\n    props: args,\n    template: `<tiTab [tabTitle]="tabTitle" [active]="active">Content 1</tiTab>`\n  })\n}',...Active.parameters?.docs?.source}}},Unactive.parameters={...Unactive.parameters,docs:{...Unactive.parameters?.docs,source:{originalSource:'{\n  args: {\n    tabTitle: "Tab 1",\n    active: false\n  },\n  render: (args: any) => ({\n    component: TabComponent,\n    props: args,\n    template: `<tiTab [tabTitle]="tabTitle" [active]="active">Content 1</tiTab>`\n  })\n}',...Unactive.parameters?.docs?.source}}}},"./libs/tabs/README.md":module=>{module.exports='# Tabs Component\r\n\r\nThe `Tabs` component provides a customizable tab navigation system to organize content. It includes an optional `Tab` component for defining individual tabs.\r\n\r\n## Installation\r\n\r\nEnsure that you have installed the `@teenageinterface/tabs` library in your Angular project. If not, you can add it using:\r\n\r\n```bash\r\nnpm install @teenageinterface/tabs\r\n```\r\n\r\n## Usage\r\n\r\n### Basic Example\r\n\r\n```typescript\r\nimport { Component } from \'@angular/core\';\r\n\r\n@Component({\r\n  selector: \'app-example\',\r\n  template: `\r\n    <tiTabs [type]="\'primary\'">\r\n      <tiTab tabTitle="Tab 1" [active]="true">\r\n        <p>Content of Tab 1</p>\r\n      </tiTab>\r\n      <tiTab tabTitle="Tab 2">\r\n        <p>Content of Tab 2</p>\r\n      </tiTab>\r\n      <tiTab tabTitle="Tab 3">\r\n        <p>Content of Tab 3</p>\r\n      </tiTab>\r\n    </tiTabs>\r\n  `,\r\n})\r\nexport class ExampleComponent {}\r\n```\r\n\r\n### Advanced Example\r\n\r\n```html\r\n<tiTabs [type]="\'ghost\'">\r\n  <tiTab tabTitle="Home" [active]="true">\r\n    <p>Welcome to the home tab!</p>\r\n  </tiTab>\r\n  <tiTab tabTitle="Profile">\r\n    <p>Profile content goes here.</p>\r\n  </tiTab>\r\n  <tiTab tabTitle="Settings">\r\n    <p>Adjust your preferences in the settings tab.</p>\r\n  </tiTab>\r\n</tiTabs>\r\n```\r\n\r\n---\r\n\r\n## Components Overview\r\n\r\n### `TabsComponent`\r\n\r\nThe parent container for managing tab navigation and active state.\r\n\r\n#### Properties\r\n\r\n| Property   | Type                          | Default     | Description                                                 |\r\n|------------|-------------------------------|-------------|-------------------------------------------------------------|\r\n| `type`     | `"default" | "primary" | "ghost"` | `"default"` | Defines the tab style: `default`, `primary`, or `ghost`.   |\r\n\r\n#### Styling Classes\r\n\r\nThe component applies utility classes based on the `type` property to achieve the desired appearance.\r\n\r\n---\r\n\r\n### `TabComponent`\r\n\r\nDefines an individual tab and its associated content.\r\n\r\n#### Properties\r\n\r\n| Property   | Type      | Default   | Description                       |\r\n|------------|-----------|-----------|-----------------------------------|\r\n| `tabTitle` | `string`  | `\'\'`      | Title displayed on the tab header. |\r\n| `active`   | `boolean` | `false`   | Indicates whether the tab is active. |\r\n\r\n---\r\n\r\n## Features\r\n\r\n### Dynamic Active Tab\r\n\r\nIf no tab is marked as active, the first tab is automatically activated upon initialization.\r\n\r\n### Content Projection\r\n\r\nUse Angular\'s content projection (`<ng-content>`) to display custom content within each tab.\r\n\r\n---\r\n\r\n## Example with Programmatic Tab Switching\r\n\r\n```typescript\r\nimport { Component } from \'@angular/core\';\r\nimport { TabComponent } from \'./tab.component\';\r\n\r\n@Component({\r\n  selector: \'app-programmatic-tabs\',\r\n  template: `\r\n    <button (click)="activateTab(1)">Activate Tab 2</button>\r\n    <tiTabs>\r\n      <tiTab tabTitle="Tab 1" #tab1>\r\n        <p>Content of Tab 1</p>\r\n      </tiTab>\r\n      <tiTab tabTitle="Tab 2" #tab2>\r\n        <p>Content of Tab 2</p>\r\n      </tiTab>\r\n    </tiTabs>\r\n  `,\r\n})\r\nexport class ProgrammaticTabsComponent {\r\n  @ViewChild(\'tab2\') tab2!: TabComponent;\r\n\r\n  activateTab(index: number) {\r\n    this.tab2.active = true;\r\n  }\r\n}\r\n```\r\n\r\n---\r\n\r\n## Documentation\r\n\r\nFor more information, visit the [official documentation]().\r\n\r\n## Repository\r\n\r\nThe source code is available on [GitHub](https://github.com/0K00/teenageinterface).\r\n\r\n## License\r\n\r\nThis project is licensed under the [MIT License](https://github.com/0K00/teenageinterface/blob/main/LICENSE.MD).\r\n'}}]);